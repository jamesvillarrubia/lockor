###############################################################################
# PR TITLE VALIDATION JOB
###############################################################################
#
# This job validates that pull request titles follow conventional commit format.
# It provides helpful feedback and creates sticky comments for guidance.
#
# USAGE:
#   - Runs automatically on PR events (opened, edited, synchronize, reopened)
#   - Validates PR title format against conventional commit standards
#   - Creates/updates sticky comments with validation results
#
# VALIDATION RULES:
#   - Format: type(scope): description
#   - Types: feat, fix, docs, style, refactor, test, chore, etc.
#   - Scope: optional, describes the area of change
#   - Description: required, describes what changed
#
# FEATURES:
#   - Sticky comments that update automatically
#   - Helpful error messages with examples
#   - Supports both pull_request and pull_request_target events
#   - Non-blocking (warnings only, doesn't fail the workflow)
#
###############################################################################

name: "PR Title Format Check"

on:
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize
      - reopened
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
  workflow_call:

permissions:
  pull-requests: read

jobs:
  main:
    name: Validate PR title
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        id: lint_pr_title
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Configure which types are allowed (newline-delimited).
          # Default: https://github.com/commitizen/conventional-commit-types
          types: |
            fix
            feat
            docs
            style
            chore
            refactor
            perf
            test
            ci
            build
            revert
            major
          requireScope: false


      - uses: marocchino/sticky-pull-request-comment@v2
        # When the previous steps fails, the workflow would stop. By adding this
        # condition you can continue the execution with the populated error message.
        if: always() && (steps.lint_pr_title.outputs.error_message != null)
        with:
          header: pr-title-lint-error
          message: |
            Hey there and thank you for opening this pull request! üëãüèº
            
            We require pull request titles to follow the [Conventional Commits specification](https://www.conventionalcommits.org/en/v1.0.0/) and it looks like your proposed title needs to be adjusted.

            Details:
            
            ```
            ${{ steps.lint_pr_title.outputs.error_message }}
            ```

      # Delete a previous comment when the issue has been resolved
      - if: ${{ steps.lint_pr_title.outputs.error_message == null }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:   
          header: pr-title-lint-error
          delete: true