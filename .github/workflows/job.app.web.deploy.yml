name: "Web Deploy"

# Simple deploy workflow for the Vite web application
# This demonstrates how to use version numbers in deployment

on:
  workflow_call:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
        type: string
      project_id:
        description: 'Project ID for deployment'
        required: false
        type: string
      bucket:
        description: 'Storage bucket for deployment'
        required: false
        type: string
  workflow_dispatch:

env:
  WEB_DIR: apps/web
  NODE_VERSION: '22'

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WEB_DIR }}/package-lock.json

      - name: Install Dependencies
        working-directory: ${{ env.WEB_DIR }}
        run: npm ci

      - name: Build with Version
        working-directory: ${{ env.WEB_DIR }}
        env:
          VITE_VERSION: ${{ inputs.version }}
          VITE_PROJECT_ID: ${{ inputs.project_id }}
        run: |
          echo "Building version: ${{ inputs.version }}"
          echo "Project ID: ${{ inputs.project_id }}"
          npm run build

      - name: Example Deployment Step
        run: |
          echo "üöÄ Deploying web app version ${{ inputs.version }}"
          echo "üìÅ Built files are in: ${{ env.WEB_DIR }}/dist"
          echo "üîß Project ID: ${{ inputs.project_id }}"
          echo "üóÑÔ∏è  Bucket: ${{ inputs.bucket }}"
          echo ""
          echo "In a real deployment, you would:"
          echo "  1. Upload ${{ env.WEB_DIR }}/dist to your hosting service"
          echo "  2. Update DNS/CDN settings"  
          echo "  3. Run smoke tests"
          echo "  4. Send deployment notifications"