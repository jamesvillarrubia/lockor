###############################################################################
# LINT & FORMAT CHECK JOB
###############################################################################
#
# This job performs TypeScript compilation and ESLint checks on the extension code.
# It ensures code quality and catches syntax errors before deployment.
#
# USAGE:
#   - Run automatically when extension files change
#   - Can be triggered manually via workflow_dispatch
#   - Fails the pipeline if linting errors are found
#
# CONFIGURATION:
#   - TypeScript config: tsconfig.json
#   - ESLint config: .eslintrc.json (if present)
#   - Node.js version: 20
#
###############################################################################

name: "Lint & Format Check"

on:
  workflow_call:
  workflow_dispatch:

jobs:
  lint:
    name: TypeScript Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: TypeScript Check
        run: pnpm run compile

      - name: ESLint Check (if available)
        run: |
          if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ] || [ -f "eslint.config.js" ]; then
            echo "ESLint config found, running linter..."
            if pnpm list eslint >/dev/null 2>&1; then
              pnpm run lint || echo "Lint script not found, skipping..."
            else
              echo "ESLint not installed, skipping..."
            fi
          else
            echo "No ESLint config found, skipping..."
          fi